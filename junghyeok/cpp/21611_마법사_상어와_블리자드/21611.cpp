#include <iostream>
#include <vector>

using namespace std;

/*
    블리자드(방향, 거리)를 써서 구슬을 파괴.
    구슬이 또르르 굴러와 빈자리를 채움.
    연속된 구슬이 4개 이상이면 폭발.
    다시 굴러옴.
    폭발하는 구슬이 없을 때까지 반복.
    각 연속된 구슬 그룹은 2개의 구슬(연속된 구슬의 개수, 그 번호)로 변화.

    위 과정을 M번 반복.

    1×(폭발한 1번 구슬의 개수) + 2×(폭발한 2번 구슬의 개수) + 3×(폭발한 3번 구슬의 개수) 출력

    -----------------------

    블리자드 대상 인덱스 구하는 법

    달팽이 껍질 모양의 테이블
    안쪽 칸에서 바깥쪽 칸으로 가기 위한 인덱스 차이는,
    껍질이 커질 수록 커진다.

    그 증가량은, 껍질이 코너를 돌 때 1씩 2번 증가한다.

    7 7 8 9 9 10 11 11 11 12 13 13 13 14 15 15 15 15 16 16 16 16 17 17 17 17 17

    새로운 인덱스 차이를 구했으면, 해당 껍데기의 길이동안 유지된다. (꺾기 전까지 유지된다.)

    껍데기의 길이는 (북, 서), (남, 동)이 동일하다.

    북으로 3 쐈으면 파괴되는 인덱스는
    7 22 45
    인덱스 증가값은 각 7, 15, 23

    7: 초기값
    15: 7 + 2 + 2 + 2 + 2 : 코너를 4번 돌아야 한다.
    23: 15 + 2 + 2 + 2 + 2 : 코너를 4번

    => 증가값은 항상 8이다.
*/


int main(){
    int N, M, i, j;
    cin >> N >> M;
    vector<int> marbles (N*N);

    return 0;
}   